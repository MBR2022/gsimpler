// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MBR2022/gosimpler/internal/store (interfaces: MemStore)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	model "github.com/MBR2022/gosimpler/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockMemStore is a mock of MemStore interface.
type MockMemStore struct {
	ctrl     *gomock.Controller
	recorder *MockMemStoreMockRecorder
}

// MockMemStoreMockRecorder is the mock recorder for MockMemStore.
type MockMemStoreMockRecorder struct {
	mock *MockMemStore
}

// NewMockMemStore creates a new mock instance.
func NewMockMemStore(ctrl *gomock.Controller) *MockMemStore {
	mock := &MockMemStore{ctrl: ctrl}
	mock.recorder = &MockMemStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemStore) EXPECT() *MockMemStoreMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockMemStore) Add(arg0 *model.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockMemStoreMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockMemStore)(nil).Add), arg0)
}

// Delete mocks base method.
func (m *MockMemStore) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockMemStoreMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockMemStore)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockMemStore) Get(arg0 string) (*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMemStoreMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMemStore)(nil).Get), arg0)
}

// Update mocks base method.
func (m *MockMemStore) Update(arg0 *model.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockMemStoreMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockMemStore)(nil).Update), arg0)
}
